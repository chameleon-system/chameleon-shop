{#
    @var int level
    @var ChameleonSystem\EcommerceStatsBundle\Service\EcommerceStatsGroup[] group
    @var string[] columnNames
    @var bool showDiffColumn
    @var int maxGroupCount
#}

{% set barHeight = 200 %}     {# in pixel #}
{% set totalBarWidth = 20 %}     {# in pixel #}
{% set subBarWidth = 10 %}       {# in pixel #}
{% set gridCount = 10 %}       {# number of lines to show max #}
{% set gridDivider = 5 %}       {# number the grid lines are always divisible by #}
{% set mainBarColor = '#185EA8'%}       {# color for the first bar (total value) #}
{% set colors = ['#5E98FF', '#807D9A', '#92C1F0', '#A2ACB3', '#7ADEFF'] %}       {# colors for the bars #}

<div class="groupcontainer-barchart">

    {% set oldVal = 0 %}
    {% set maxVal = group.maxValue %}
    {% set divideThrough = maxVal / gridCount %}
    {% set divideThrough = (divideThrough | round) + (gridDivider - (divideThrough | round) % gridDivider) %}
    {% if divideThrough == 0 %}
        {% set totalWithoutRemain = maxVal %}
    {% else %}
        {% set remain = maxVal % divideThrough %}
        {% set totalWithoutRemain = maxVal - remain %}
    {% endif %}

    <div class="bar-gridline" style="top: {{ barHeight + gridDivider - 1 }}px;"> 0 </div>

    {% if totalWithoutRemain < divideThrough %} {# "range" function in twig dislikes "step" param greater than "end" param :( #}
        {% set topvalue = barHeight + gridDivider %}
        <div class="bar-gridline" style="top: {{ topvalue }}px;">{{ 0 }}</div>
    {% else %}
        {% for gridHeight in range(0, totalWithoutRemain, divideThrough) %}
            {% set topvalue = barHeight - (barHeight / maxVal * gridHeight) + gridDivider %}
            <div class="bar-gridline" style="top: {{ topvalue }}px;">{{ gridHeight }}</div>
        {% endfor %}
    {% endif %}

    {% set colorSubcategory = {} %}

    {% for name in columnNames %}
        <div class="barchart-item">
            <div class="columnHeader"><strong>{{ name }}</strong></div>
            <div class="columnBars" style="height: {{ barHeight }}px;">
                {% set newVal = group.getTotals(name) %}

                <div class="bar-wrapper" style="height: {{ barHeight }}px;">
                    <div class="bar" style="background-color: {{ mainBarColor }}; width: {{ totalBarWidth }}px; height: {{ barHeight / maxVal * newVal }}px;"></div>
                </div>

                {% if group.subGroups | length > 0 %}
                    {% set colorCount = 0 %}
                    {% set subHeight = [] %}
                    {% set oldSubHeight = [] %}
                    {% set barHTML = {} %}

                    {% for subGroupName, subGroup in group.subGroups %}
                        {% set subGroupColumn = subGroup.subGroupColumn %}

                        {% if subHeight[subGroupColumn] is not defined %}
                            {% set subHeight = subHeight | merge({(subGroupColumn): null}) %}
                        {% endif %}

                        {% if oldSubHeight[subGroupColumn] is not defined %}
                            {% set oldSubHeight = oldSubHeight | merge({(subGroupColumn): 0}) %}
                        {% endif %}

                        {% if barHTML[subGroupColumn] is not defined %}
                            {% set barHTML = barHTML | merge({(subGroupColumn): ''}) %}
                        {% endif %}

                        {% if colors[colorCount] is not defined %}
                            {% set colorCount = 0 %}
                        {% endif %}

                        {% set value = subGroup.getTotals(name) %}

                        {% if not subHeight[subGroupColumn] == null %}
                            {% set oldSubHeight = oldSubHeight | merge({(subGroupColumn): subHeight[subGroupColumn]}) %}
                        {% endif %}

                        {% set subHeight = subHeight | merge({(subGroupColumn): barHeight / maxVal * value}) %}
                        {% set subBarData = {(subGroupName): {className: subGroupColumn, bottom: oldSubHeight[subGroupColumn], backgroundColor: colors[colorCount], width: subBarWidth, height: subHeight[subGroupColumn]}} %}
                        {% set barHTML = barHTML | merge({(subGroupColumn): (barHTML[subGroupColumn] ?: {}) | merge(subBarData) }) %}

                        {% set color = colors[colorCount] %}
                        {% set colorSubcategory = colorSubcategory | merge( {(subGroupColumn): (colorSubcategory[subGroupColumn] ?: {}) | merge({(color): subGroup.groupTitle}) }) %}

                        {% set colorCount = colorCount + 1 %}
                    {% endfor %}

                    {% set subBarCount = 1 %}

                    {% for html in barHTML %}
                        {% if (subBarCount == 1) %}
                            {% set margin = totalBarWidth %}
                        {% else %}
                            {% set margin = subBarWidth %}
                        {% endif %}
                        {% if html %}
                            <div class="bar-wrapper" style="height: {{ barHeight }}px; margin-left: {{ margin }}px;">
                            {% for barData in html %}
                                <div class="bar {{ barData.className }}" style="bottom: {{ barData.bottom }}px; background-color: {{ barData.backgroundColor }}; width: {{ barData.width }}px; height: {{ barData.height }}px;"></div>
                            {% endfor %}
                            </div>
                        {% endif %}
                        {% set subBarCount = subBarCount + 1 %}
                    {% endfor %}
                {% endif %}

            </div>  {# of .columnBars #}

            <div class="cleardiv"></div>

            {{ newVal | chameleon_system_ecommerce_stats_format_number(2) }}
        </div>

        {% set oldVal = newVal %}
    {% endfor %}

    <div class="cleardiv">&nbsp;</div>
    <br/>
    <span class="legend-square" style="background-color:{{ mainBarColor }};"></span> {{ 'chameleon_system_ecommerce_stats.total' | trans }} <br/>

    {% if colorSubcategory | length > 0 %}
        {% for realColorSubcategory in colorSubcategory %}
            <span class="legend-divider">&nbsp;</span>
            {% for color, name in realColorSubcategory %}
                <span class="legend-square" style="background-color: {{ color }};"></span>{{ name }}<br />
            {% endfor %}
        {% endfor %}
    {% endif %}

    <br/>
</div>
